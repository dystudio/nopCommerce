@model Nop.Plugin.Misc.RestService.Models.ConfigureModel
@using Nop.Web.Framework

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Nop.Plugin.Misc.RestService.Configure.Title")
        </h1>
        <div class="pull-right">
            <button type="submit" name="save-continue" class="btn bg-blue generate-hash">
                <i class="fa fa-floppy-o"></i>
                @T("Nop.Plugin.Misc.RestService.GenerateHash")
            </button>
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>

        </div>
    </div>
    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.NopLabelFor(model => model.ApiToken)
                            </div>
                            <div class="col-md-9">
                                @Html.NopEditorFor(model => model.ApiToken)
                                @Html.ValidationMessageFor(model => model.ApiToken)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            var guid = (function () {
                function s4() {
                    return Math.floor((1 + Math.random()) * 0x10000)
                               .toString(16)
                               .substring(1);
                }
                return function () {
                    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                           s4() + '-' + s4() + s4() + s4();
                };
            })();

            $('.generate-hash').click(function (e) {
                e.preventDefault();
                $('#ApiToken').val(guid());
            });
        });
    </script>
}